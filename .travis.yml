language: cpp

compiler:
    - gcc
    - clang

os:
    - linux
    - osx

notifications:
  email: false

sudo: required

cache:
  - apt
  - ccache

addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
      - llvm-toolchain-precise-3.5
      - boost-latest
    packages:
      - gcc-4.9
      - g++-4.9
      - clang-3.5
      - ccache
      - libpython2.7
      - libboost1.55-all-dev
      - cmake

env:
  - PYTHON_VERSION=2.7

before_install:
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then sudo add-apt-repository ppa:hvr/z3 -y; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then sudo apt-get update -q; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then sudo apt-get install -y --force-yes libz3-dev; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then sudo apt-get install python-setuptools; fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then brew update; fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then brew install z3; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ] && [ "$CC" = "gcc" ]; then export CC="gcc-4.9"; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ] && [ "$CXX" = "g++" ]; then export CXX="g++-4.9"; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ] && [ "$CC" = "clang" ]; then export CC="clang-3.5"; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ] && [ "$CXX" = "clang++" ]; then export CXX="clang++-3.5"; fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then export CC="clang"; fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then export CXX="clang++"; fi
  # Back to /home/travis/build/JonathanSalwan
  - cd ..
  # Install capstone
  - git clone https://github.com/aquynh/capstone.git
  - cd capstone
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then bash ./make.sh; fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then ./make.sh; fi
  - sudo make install
  - cd ../
  # Download pin
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then wget http://software.intel.com/sites/landingpage/pintool/downloads/pin-2.14-71313-gcc.4.4.7-linux.tar.gz; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then tar -xf pin-2.14-71313-gcc.4.4.7-linux.tar.gz; fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then wget http://software.intel.com/sites/landingpage/pintool/downloads/pin-2.14-71313-clang.4.2-mac.tar.gz; fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then tar -xf pin-2.14-71313-clang.4.2-mac.tar.gz; fi
  # Move Triton into pin
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then mv ./Triton ./pin-2.14-71313-gcc.4.4.7-linux/source/tools/; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then cd ./pin-2.14-71313-gcc.4.4.7-linux/source/tools/Triton; fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then mv ./Triton ./pin-2.14-71313-clang.4.2-mac/source/tools/; fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then cd ./pin-2.14-71313-clang.4.2-mac/source/tools/Triton; fi
  # Prepare build
  - mkdir build
  - cd build

script:
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then cmake -DPINTOOL=on -DKERNEL4=on ..; fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then cmake ..; fi
  - sudo make -j2 install
  - cd ..
  - sudo python2.7 ./setup.py install

  # libTriton unit testing
  # Python
  - python2.7 ./src/examples/python/code_coverage_crackme_xor.py
  - python2.7 ./src/examples/python/disass.py
  - python2.7 ./src/examples/python/ir.py
  - python2.7 ./src/examples/python/simplification.py
  - python2.7 ./src/examples/python/symbolic_emulation_1.py
  - python2.7 ./src/examples/python/symbolic_emulation_2.py
  - python2.7 ./src/examples/python/symbolic_emulation_crackme_xor.py
  - python2.7 ./src/testers/libTriton_units_testing.py
  # C++
  - cd src/examples/cpp
  - make
  - ./taint_reg.bin
  - ./info_reg.bin
  - ./ir.bin
  - ./simplification.bin
  - ./constraint.bin
  - cd ../../../

  # libPintool + libTriton unit testing
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then sudo sh -c "echo 0 > /proc/sys/kernel/yama/ptrace_scope"; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then ./triton ./src/testers/check_semantics.py ./src/samples/ir_test_suite/ir; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then ./triton ./src/examples/pin/ast_dictionaries.py ./src/samples/crackmes/crackme_xor elite; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then ./triton ./src/examples/pin/blacklist.py ./src/samples/crackmes/crackme_xor a; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then ./triton ./src/examples/pin/callback_image.py ./src/samples/ir_test_suite/ir; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then ./triton ./src/examples/pin/callback_routine.py  ./src/samples/vulns/testSuite; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then ./triton ./src/examples/pin/callback_syscall.py  ./src/samples/crackmes/crackme_xor a; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then ./triton ./src/examples/pin/crackme_hash_collision.py ./src/samples/crackmes/crackme_hash aaaaa; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then ./triton ./src/examples/pin/inject_model_with_snapshot.py ./src/samples/crackmes/crackme_xor a; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then ./triton ./src/examples/pin/ir.py ./src/samples/crackmes/crackme_xor a > /dev/null; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then ./triton ./src/examples/pin/runtime_memory_tainting.py ./src/samples/crackmes/crackme_xor a; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then ./triton ./src/examples/pin/runtime_register_modification.py ./src/samples/crackmes/crackme_xor a; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then ./triton ./src/examples/pin/strlen.py ./src/samples/others/strlen 1; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then ./triton ./src/examples/pin/sym_only_on_tainted.py ./src/samples/crackmes/crackme_xor a; fi

